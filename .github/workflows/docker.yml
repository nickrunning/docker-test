name: Build and Publish Docker Image

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

env:
  GHCR_REGISTRY: ghcr.io
  DOCKERHUB_REGISTRY: docker.io
  IMAGE_NAME: ${{ github.repository }}
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.GHCR_REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Login to Docker Hub
      if: ${{ env.DOCKERHUB_TOKEN }}
      uses: docker/login-action@v3
      with:
        registry: ${{ env.DOCKERHUB_REGISTRY }}
        username: ${{ env.DOCKERHUB_USERNAME }}
        password: ${{ env.DOCKERHUB_TOKEN }}

    - name: Extract metadata for GitHub Container Registry
      id: meta-ghcr
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.GHCR_REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=raw,value=latest

    - name: Extract metadata for Docker Hub
      id: meta-dockerhub
      if: ${{ env.DOCKERHUB_TOKEN }}
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}
        tags: |
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=raw,value=latest

    - name: Combine tags and labels
      id: combined-meta
      env:
        GHCR_TAGS: ${{ steps.meta-ghcr.outputs.tags }}
        DOCKERHUB_TAGS: ${{ steps.meta-dockerhub.outputs.tags }}
        GHCR_LABELS: ${{ steps.meta-ghcr.outputs.labels }}
      run: |
        # 创建一个临时文件来存储所有标签
        ALL_TAGS_FILE=$(mktemp)
        
        # 添加GHCR标签到文件
        if [[ -n "$GHCR_TAGS" ]]; then
          echo "$GHCR_TAGS" | tr ',' '\n' >> "$ALL_TAGS_FILE"
        fi
        
        # 添加DockerHub标签到文件（如果存在）
        if [[ -n "$DOCKERHUB_TOKEN" && -n "$DOCKERHUB_TAGS" ]]; then
          echo "$DOCKERHUB_TAGS" | tr ',' '\n' >> "$ALL_TAGS_FILE"
        fi
        
        # 读取所有标签并去重
        ALL_TAGS=$(sort -u "$ALL_TAGS_FILE" | tr '\n' ',' | sed 's/,$//')
        
        # 写入输出，确保格式正确
        echo "tags=$ALL_TAGS" >> $GITHUB_OUTPUT
        echo "labels=$GHCR_LABELS" >> $GITHUB_OUTPUT
        
        echo "🏷️ Tags to be built:"
        cat "$ALL_TAGS_FILE" | sed 's/^/  - /'
        
        # 清理临时文件
        rm "$ALL_TAGS_FILE"

    - name: Build and push Docker image
      id: build-image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.combined-meta.outputs.tags }}
        labels: ${{ steps.combined-meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Generate artifact attestation
      if: github.event_name != 'workflow_dispatch'
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: ${{ env.GHCR_REGISTRY }}/${{ env.IMAGE_NAME }}
        subject-digest: ${{ steps.build-image.outputs.digest }}
        push-to-registry: true

    - name: Output Docker image information
      env:
        REPOSITORY_NAME: ${{ github.event.repository.name }}
        BUILD_DIGEST: ${{ steps.build-image.outputs.digest }}
        GHCR_TAGS: ${{ steps.meta-ghcr.outputs.tags }}
        DOCKERHUB_TAGS: ${{ steps.meta-dockerhub.outputs.tags }}
      run: |
        echo "## 🐳 Docker Image Published" >> $GITHUB_STEP_SUMMARY
        echo "**Digest:** \`$BUILD_DIGEST\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        echo "### 📦 GitHub Container Registry" >> $GITHUB_STEP_SUMMARY
        echo "**Registry:** $GHCR_REGISTRY" >> $GITHUB_STEP_SUMMARY
        echo "**Repository:** $IMAGE_NAME" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        echo "$GHCR_TAGS" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        
        if [[ -n "$DOCKERHUB_TOKEN" ]]; then
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🐋 Docker Hub" >> $GITHUB_STEP_SUMMARY
          echo "**Registry:** $DOCKERHUB_REGISTRY" >> $GITHUB_STEP_SUMMARY
          echo "**Repository:** $DOCKERHUB_USERNAME/$REPOSITORY_NAME" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "$DOCKERHUB_TAGS" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        else
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ⚠️ Docker Hub" >> $GITHUB_STEP_SUMMARY
          echo "Docker Hub publishing skipped - credentials not configured" >> $GITHUB_STEP_SUMMARY
        fi